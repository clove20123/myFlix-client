var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegistrationView", ()=>RegistrationView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _registrationViewScss = require("./registration-view.scss");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRouterDom = require("react-router-dom");
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _s = $RefreshSig$();
function RegistrationView(props) {
    _s();
    const [Username, setUsername] = _react.useState('');
    const [Password, setPassword] = _react.useState('');
    const [Email, setEmail] = _react.useState('');
    const [Birthday, setBirthday] = _react.useState('');
    const handleSubmit = (e)=>{
        e.preventDefault();
        console.log(Username, Password, Email, Birthday);
    };
    _axiosDefault.default.post('https://my-movie-api-20123.herokuapp.com/users', {
        Username: Username,
        Password: Password,
        Email: Email,
        Birthday: Birthday
    }).then((response)=>{
        const data = response.data;
        console.log(data);
        window.open('/', '_self'); // the second argument '_self' is necessary so that the page will open in the current tab
    }).catch((e)=>{
        console.log('error registering the user');
    });
    return(/*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
        className: "RegistrationForm",
        onSubmit: handleSubmit,
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 39
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formGroupUsername",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 40
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 41
        },
        __self: this
    }, "Username"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        placeholder: "Enter Username",
        value: Username,
        autoComplete: "username",
        onChange: (e)=>setUsername(e.target.value)
        ,
        minLength: "5",
        required: true,
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 42
        },
        __self: this
    }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
        type: "invalid",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 43
        },
        __self: this
    }, "Please provide a valid username at least 5 characters long.")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formGroupPassword",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 45
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 46
        },
        __self: this
    }, "Password"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "password",
        placeholder: "Enter Password",
        value: Password,
        autoComplete: "password",
        onChange: (e)=>setPassword(e.target.value)
        ,
        minLength: "5",
        required: true,
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 47
        },
        __self: this
    }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
        type: "invalid",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 48
        },
        __self: this
    }, "Please provide a valid password at least 5 characters long.")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formGroupEmail",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 50
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 51
        },
        __self: this
    }, "Email"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "email",
        placeholder: "Enter Email",
        value: Email,
        autoComplete: "email",
        onChange: (e)=>setEmail(e.target.value)
        ,
        required: true,
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 52
        },
        __self: this
    }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
        type: "invalid",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 53
        },
        __self: this
    }, "Please provide a valid email address.")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Group, {
        controlId: "formGroupBirthdate",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 55
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Label, {
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 56
        },
        __self: this
    }, "Birthdate"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "date",
        placeholder: "00-00-0000",
        value: Birthday,
        onChange: (e)=>setBirthday(e.target.value)
        ,
        required: true,
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 57
        },
        __self: this
    }), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control.Feedback, {
        type: "invalid",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 58
        },
        __self: this
    }, "Please enter a valid birthday.")), /*#__PURE__*/ _reactDefault.default.createElement("span", {
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 60
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        type: "submit",
        onClick: handleSubmit,
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 61
        },
        __self: this
    }, "Submit"), ' ', /*#__PURE__*/ _reactDefault.default.createElement(Link, {
        to: "/",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 63
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        variant: "secondary",
        type: "button",
        __source: {
            fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 64
        },
        __self: this
    }, "Back")))));
}
_s(RegistrationView, "D0lB37FO5C6TvcokQK9Cc01QTS8=");
_c = RegistrationView;
RegistrationView.propTypes = {
    register: _propTypesDefault.default.shape({
        Username: _propTypesDefault.default.string.isRequired,
        Password: _propTypesDefault.default.string.isRequired,
        Email: _propTypesDefault.default.string.isRequired,
        Birthdate: _propTypesDefault.default.string.isRequired
    })
};
var _c;
$RefreshReg$(_c, "RegistrationView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}