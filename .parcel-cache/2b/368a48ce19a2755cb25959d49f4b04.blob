var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _mainViewScss = require("./main-view.scss");
var _reactRouterDom = require("react-router-dom");
var _loginView = require("../login-view/login-view");
var _registrationView = require("../registration-view/registration-view");
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
var _row = require("react-bootstrap/Row");
var _rowDefault = parcelHelpers.interopDefault(_row);
var _col = require("react-bootstrap/Col");
var _colDefault = parcelHelpers.interopDefault(_col);
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            movies: [],
            selectedMovie: null,
            user: null
        };
    }
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.setState({
                user: localStorage.getItem('user')
            });
            this.getMovies(accessToken);
        }
    }
    onLoggedIn(authData) {
        console.log(authData);
        this.setState({
            user: authData.user.Username
        });
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        this.getMovies(authData.token);
    }
    getMovies(token) {
        _axiosDefault.default.get('https://my-movie-api-20123.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            // Assign the result to the state
            this.setState({
                movies: response.data
            });
        }).catch(function(error) {
            console.log(error);
        });
    }
    setSelectedMovie(movie) {
        this.setState({
            selectedMovie: movie
        });
    }
    onRegister(register) {
        this.setState({
            register
        });
    }
    render() {
        const { movies , selectedMovie , user  } = this.state;
        if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 80
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 81
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
            onLoggedIn: (user1)=>this.onLoggedIn(user1)
            ,
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 82
            },
            __self: this
        }))));
        if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 85
            },
            __self: this
        }));
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 88
            },
            __self: this
        }, "/* Start Main View*/", /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            className: "main-view justify-md-content-center",
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 92
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
                    className: "m-3 navigation-main"
                }, /*#__PURE__*/ _reactDefault.default.createElement(NavBar, {
                    user: user
                })), /*#__PURE__*/ _reactDefault.default.createElement(MoviesList, {
                    movies: movies
                })));
            },
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 93
            },
            __self: this
        }), "/* Register View*/", /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/register",
            render: ()=>{
                if (user) return(/*#__PURE__*/ _reactDefault.default.createElement(Redirect, {
                    to: "/"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, {
                    user: user
                }))));
            },
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 110
            },
            __self: this
        }), "/* Movie View */", /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:Title",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }))));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m.Title.params.Title
                    ),
                    onBackClick: ()=>history.goBack()
                })))));
            },
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 120
            },
            __self: this
        }), "/* Genre View */", /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/genres/:name",
            render: ({ match , history  })=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                }))));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
                    className: "m-3 navigation-main"
                }, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(NavBar, {
                    user: user
                }))), /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, null, /*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(GenreView, {
                    genre: movies.find((m)=>m.genre.name === match.params.name
                    ).genre,
                    onBackClick: ()=>history.goBack()
                    ,
                    movies: movies
                })))));
            },
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 136
            },
            __self: this
        })), "/*", /*#__PURE__*/ _reactDefault.default.createElement(_rowDefault.default, {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 158
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                return movies.map((m)=>/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                        md: 3,
                        key: m._id
                    }, /*#__PURE__*/ _reactDefault.default.createElement(_movieCard.MovieCard, {
                        movie: m
                    }))
                );
            },
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 159
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match  })=>{
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    )
                })));
            },
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 166
            },
            __self: this
        }), " */ /* Director View*/", /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/directors/:name",
            render: ({ match  })=>{
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_colDefault.default, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ).Director
                })));
            },
            __source: {
                fileName: "C:\\Users\\clove\\Desktop\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 174
            },
            __self: this
        }))));
    }
}
exports.default = MainView;

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}